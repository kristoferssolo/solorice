#!/bin/sh
# Basic Settings
set autoquit true
set cleaner "~/.config/lf/cleaner"
set drawbox true
set hidden true
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set icons true
set ifs "\n"
set ignorecase true
set info size
set period 1
set previewer "~/.config/lf/preview"
set ratios 1:2:3
set scrolloff 10
set shellopts '-eu'

# Custom Functions

cmd trash ${{
        trash-put $f
}}

cmd moveto ${{
        clear; tput cup $(($(tput lines)/3)); tput bold
        set -f
        clear; echo "Move to where?"
        dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' $XDG_CONFIG_HOME/shell/bm-dirs | sk | sed 's|~|$HOME|')" &&
        for x in $fx; do
            eval mv -iv \"$x\" \"$dest\"
        done &&
        notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}


cmd copyto ${{
        clear; tput cup $(($(tput lines)/3)); tput bold
        set -f
        clear; echo "Copy to where?"
        dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' $XDG_CONFIG_HOME/shell/bm-dirs | sk | sed 's|~|$HOME|')" &&
        for x in $fx; do
            eval cp -ivr \"$x\" \"$dest\"
        done &&
        notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}


cmd open ${{
        case $(file --mime-type "$(readlink -f $f)" -b) in
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
            image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
            text/*|application/json|inode/x-empty|application/x-subrip) $EDITOR $fx ;;
            image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
            image/svg+xml) display -- $f ;;
            image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" |
                setsid -f nsxiv -aio 2>/dev/null | while read -r file; do
                    [ -z "$file" ] && continue
                    lf -remote "send select \"$file\""
                    lf -remote "send toggle"
                done &
                ;;
            audio/*|video/x-ms-asf) mpv --audio-display=no $f ;;
            video/*) setsid -f mpv --speed=2 $f -quiet >/dev/null 2>&1 ;;
            application/pdf|application/vnd.djvu|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
            application/pgp-encrypted) $EDITOR $fx ;;
                # application/vnd.openxmlformats-officedocument.wordprocessingml.document|application/vnd.oasis.opendocument.text) setsid -f lowriter $fx >/dev/null 2>&1 ;;
                # application/vnd.openxmlformats-officedocument.spreadsheetml.sheet|application/octet-stream|application/vnd.oasis.opendocument.spreadsheet|application/vnd.oasis.opendocument.spreadsheet-template) setsid -f localc $fx >/dev/null 2>&1 ;;
                # application/vnd.openxmlformats-officedocument.presentationml.presentation|application/vnd.oasis.opendocument.presentation-template|application/vnd.oasis.opendocument.presentation|application/vnd.ms-powerpoint) setsid -f loimpress $fx >/dev/null 2>&1 ;;
                # application/vnd.oasis.opendocument.graphics|application/vnd.oasis.opendocument.graphics-template) setsid -f lodraw $fx >/dev/null 2>&1 ;;
                # application/vnd.oasis.opendocument.formula) setsid -f lomath $fx >/dev/null 2>&1 ;;
                # application/vnd.oasis.opendocument.database) setsid -f lobase $fx >/dev/null 2>&1 ;;
            *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done ;;
        esac
}}


cmd extract ${{
        clear; tput cup $(($(tput lines)/3)); tput bold
        set -f
        printf "%s\n\t" "$fx"
        printf "extract?[y/N]"
        read answer
        [ $answer = "y" ] && aunpack $fx
}}


cmd unarchive ${{
        case "$f" in
            *.zip) unzip "$f" ;;
            *.tar.gz) tar -xzvf "$f" ;;
            *.tar.bz2) tar -xjvf "$f" ;;
            *.tar) tar -xvf "$f" ;;
            *) echo "Unsupported format" ;
        esac
}}


cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"
cmd mkfile $touch "$(echo $* | tr ' ' '\ ')"
cmd setbg "$1"

# Bindings
# Remove some defaults
map "'"
map '"'
map c
map d
map m
map n
map o
map p

map au unarchive

# Basic Functions
map . set hidden!
map <c-f> $lf -remote "send $id select \"$(sk)\""
map <c-h> set hidden!
map <c-l> clear
map <enter> open
map <enter> shell
map <f-2> rename
map B $vidir # bulk rename
map D delete
map E extract
map J $lf -remote "send $id cd $(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' $XDG_CONFIG_HOME/shell/bm-dirs | sk)"
map O $mimeopen --ask "$f"
map P paste
map Y $printf "%s" "$fx" | xclip -selection clipboard
map bg $setbg $f
map cp copyto
map dd cut
map e $nvim "$f"
map md push :mkdir<space>
map mf push :mkfile<space>
map mv moveto
map nN $spacefm -t "${PWD}" & disown >/dev/null 2>&1
map nn $setsid -f $TERMINAL >/dev/null 2>&1
map o &mimeopen "$f"

cmd ripdrag-all %ripdrag --all --and-exit $fx
cmd ripdrag-individual %ripdrag --keep --target $fx
cmd ripdrag-target %ripdrag --target

# ripdrag Mapping
map da ripdrag-all
map di ripdrag-individual
#map dt ripdrag-target


# Source Bookmarks
source "~/.config/lf/shortcutrc"
